function o(s){return["white 0px 0px 5px","white 0px 0px 10px",`${s} 0px 0px 20px`,`${s} 0px 0px 30px`,`${s} 0px 0px 40px`,`${s} 0px 0px 55px`,`${s} 0px 0px 75px`].join(", ")}function r(s=10){let t=a.from_hex("#aaa");return[`${t.dim(s).toHex()} 0px 1px 0px`,`${t.dim(s*2).toHex()} 0px 2px 0px`,`${t.dim(s*3).toHex()} 0px 3px 0px`,`${t.dim(s*4).toHex()} 0px 4px 0px`,"rgba(0, 0, 0, 0.23) 0px 0px 5px","rgba(0, 0, 0, 0.43) 0px 1px 3px","rgba(0, 0, 0, 0.4) 1px 4px 6px","rgba(0, 0, 0, 0.38) 0px 5px 10px","rgba(0, 0, 0, 0.25) 3px 7px 12px"].join(", ")}var a=class{constructor(t=[0,0,0]){this.r=t[0],this.g=t[1],this.b=t[2]}static from_hex(t){if(t.match(/[\w\d]/g).length==3)var e=t.match(/[\w\d]/g),n=[parseInt(e[0],16)*17,parseInt(e[1],16)*17,parseInt(e[2],16)*17];else var e=t.match(/[\w\d]{2}/g),n=[parseInt(e[0],16),parseInt(e[1],16),parseInt(e[2],16)];return new a(n)}toHex(){let t=e=>e.toString(16).padStart(2,"0");return`#${t(this.r)}${t(this.g)}${t(this.b)}`}dim(t){let e=n=>Math.max(0,n-t);return this.r=e(this.r),this.g=e(this.g),this.b=e(this.b),this}bright(t){let e=n=>Math.min(255,n+t);return this.r=e(this.r),this.g=e(this.g),this.b=e(this.b),this}toCssRGB(){return`rgb(${this.r}, ${this.g}, ${this.b})`}};function h(s){return s.match(/[а-я]/i)?"cyr":"lat"}function l(s,t,e,n={x:0,y:0}){s.preventDefault();let i=10,x=n.x-s.clientX,p=n.y-s.clientY,g=Math.min(e.clientHeight-t.clientHeight-i,Math.max(0+i,t.offsetTop-p)),d=Math.min(e.clientWidth-t.clientWidth-i,Math.max(0+i,t.offsetLeft-x));return{dragStart:{y:s.clientY,x:s.clientX},state:{y:g+"px",x:d+"px"}}}document.addEventListener("alpine:init",()=>{Alpine.data("wnca",()=>{let s="rgba(0, 0, 0, 0.15)";return{init(){this.colors=JSON.parse(this.$refs.colors_json.innerHTML),this.$watch("val.text",()=>this.onTextChange()),this.$watch("val.font",()=>this.onFontChange()),this.$watch("state.underlay",()=>this.onUnderlayChange()),this.$watch("state.spelling",(t,e)=>this.onSpellingChange(t,e)),this._fonts=JSON.parse(this.$refs.fonts_json.innerHTML),this.updateFonts()},UNDERLAY_COLOR:s,_fonts:[],fonts:[],colors:[],getColorByHex(t){return this.colors.find(e=>e.color==t)},tabs:["Text","Font","Color"],activeTab:"Text",cache:{loadedFonts:[]},state:{dragged:!1,underlay:"no",spelling:"lat",font:null,color:{preview:"",detailPreview:""},text:{light:!0,align:"center",fontSize:"",dragStart:{x:0,y:0},x:"auto",y:"17%"}},val:{text:"",font:"",color:""},onUnderlayChange(){},onTextChange(){this.updateFontSize(),this.updateSpelling()},onFontChange(){this.updateFontSize()},onSpellingChange(t,e){e!==t&&this.updateFonts()},onColorChange(t){this.setColor(t)},onTabChange(t){this.setTab(t)},setTab(t){this.activeTab=t},setUnderlay(t){this.state.underlay=t},async setFont(t){this.cache.loadedFonts.includes(t.name)||document.fonts.add(await new FontFace(t.name,`url(${t.link})`,{style:"normal",weight:700}).load()),this.val.font=t.name,this.state.font=t,this.updateFontSize()},async setColor(t){this.state.color=t,this.val.color=t.color},getLightShadow(){return o(this.val.color)},getDarkShadow(){return r()},toggleLight(t){this.state.text.light=t},onTextDrag(t){this.state.dragged=!0;let{dragStart:e,state:n}=l(t,this.$refs.text,this.$refs.preview,this.state.text.dragStart);this.state.text.dragStart=e,this.state.text.x=n.x,this.state.text.y=n.y},get fontBaseSize(){return this.state.font.base_size},updateFonts(){let t=this.state.font==null,e=!t&&this.state.font.spelling.includes(this.state.spelling);this.fonts=this._fonts.filter(n=>n.spelling.includes(this.state.spelling)),(t||!e)&&this.setFont(this.fonts[0])},updateSpelling(){this.state.spelling=h(this.val.text)},updateFontSize(){let t=this.$refs.preview.clientWidth,e=this.$refs.text.clientWidth;this.state.text.fontSize=Math.min(this.fontBaseSize,this.state.text.fontSize/(e/t)),this.val.text.length==0&&(this.state.text.fontSize=this.fontBaseSize),parseInt(this.state.text.x)+e>t&&(this.state.text.x=t-e+"px")},get textValue(){return this.val.text.replaceAll("\\n","<br>")||"Your Text"},textValueBind:{["x-html"]:"textValue",":class":"'text-value'",":style":`{
          textShadow: state.text.light ? getLightShadow() : getDarkShadow(),
          color: state.text.light ? 'white' : val.color,
      }`},textUnderlayBind:{["x-html"]:"textValue",":class":"'text-underlay-byform'",":style":"`-webkit-text-stroke: ${state.font.underlay_by_form_size}px ${UNDERLAY_COLOR}; `"},textWrapperBind:{class:"text__wrapper",":style":`{"background-color": state.underlay == 'rectangle' ? '${s}' :"transparent" }`},textBind:{["x-ref"]:"text",":class":"'text' + ' underlay__' + state.underlay + (state.dragged ? '' : ' dragged')",":style":`{
          top: state.text.y,
          left: state.text.x,
          fontFamily: val.font,
          fontSize: state.text.fontSize + 'px',
          textAlign: state.text.align,
        }`,["@mousedown"](t){t=t||window.event,t.preventDefault(),this.state.text.dragStart.x=t.clientX,this.state.text.dragStart.y=t.clientY,document.onmouseup=()=>{document.onmouseup=null,document.onmousemove=null},document.onmousemove=this.onTextDrag.bind(this)}}}})});
//# sourceMappingURL=main.js.map
